name: Create Pull Request to DevOps

on:  
  workflow_dispatch:
    inputs:
      runson:
        type: choice
        description: 'Select Runner'
        required: true
        default: 'windows-2019'
        options:
        - windows-2019
        - windows-latest
        - self-hosted

env:
  BUILD_NUMBER: 1.0.0.${{ github.run_number }}

jobs:

  build:

    environment: DEV

    runs-on: ${{ github.event.inputs.runson }}
    
    steps:
    - name: Update docker images version to ${{ env.BUILD_NUMBER }}
      run: |
        $newbrance = "update-image-version${{ env.BUILD_NUMBER }}"
        $repositoryUrl = '${{ secrets.AZURE_DEVOPS_PROJECT_URL }}/_git/application'
        $base64PAT = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("u:${{ secrets.AZURE_DEVOPS_TOKEN }}"))
        git -c http.extraHeader="Authorization: Basic $base64PAT" clone $repositoryUrl $newbrance
        cd $newbrance
        git checkout -b $newbrance
        git config --global user.email "llau@habaneroconsulting.com"
        git config --global user.name "Larry Lau"        
        $dockerImageSpec = @"
        {
            "sitecore": {
                "cm": "ACR_NAME.azurecr.io/suncor-xp1-cm:VERSION",
                "cd": "ACR_NAME.azurecr.io/suncor-xp1-cd:VERSION",
                "id": "ACR_NAME.azurecr.io/suncor-xp1-id:VERSION",
                "prc": "ACR_NAME.azurecr.io/suncor-xp1-prc:VERSION",
                "cortexprocessing": "scr.sitecore.com/sxp/sitecore-xp1-cortexprocessing:10.1.1-ltsc2019",
                "cortexprocessingworker": "ACR_NAME.azurecr.io/suncor-xp1-cortexprocessingworker:latest",
                "cortexreporting": "scr.sitecore.com/sxp/sitecore-xp1-cortexreporting:10.1.1-ltsc2019",
                "xdbautomation": "ACR_NAME.azurecr.io/suncor-xp1-xdbautomation:VERSION",
                "xdbautomationrpt": "scr.sitecore.com/sxp/sitecore-xp1-xdbautomationrpt:10.1.1-ltsc2019",
                "xdbautomationworker": "ACR_NAME.azurecr.io/suncor-xp1-xdbautomationworker:VERSION",
                "xdbcollection": "ACR_NAME.azurecr.io/suncor-xp1-xdbcollection:VERSION",
                "xdbrefdata": "scr.sitecore.com/sxp/sitecore-xp1-xdbrefdata:10.1.1-ltsc2019",
                "xdbsearch": "ACR_NAME.azurecr.io/suncor-xp1-xdbsearch:VERSION",
                "xdbsearchworker": "ACR_NAME.azurecr.io/suncor-xp1-xdbsearchworker:VERSION",
                "solr_init_searchstax": "scr.sitecore.com/sxp/sitecore-xp1-solr-init-searchstax:10.1.1-ltsc2019",
                "mssql_init": "scr.sitecore.com/sxp/sitecore-xp1-mssql-init:10.1.1-ltsc2019",
                "mssql_init_spe": "ACR_NAME.azurecr.io/suncor-xp1-mssql-init:VERSION",
                "mssql_init_coveo": "ACR_NAME.azurecr.io/suncor-xp1-mssql-init-coveo:VERSION",
                "mssql_init_preview": "ACR_NAME.azurecr.io/suncor-xp1-mssql-init-preview:VERSION",
                "coveo_init": "ACR_NAME.azurecr.io/suncor-xp1-coveo-init:VERSION"
            },
            "external": {
                "windowsservercore": "mcr.microsoft.com/powershell:lts-windowsservercore-1809"
            }
        }
        "@
        $dockerImageSpec = $dockerImageSpec.replace('ACR_NAME','mccfmh9jpjtmdklavglacr').replace('VERSION','${{ env.BUILD_NUMBER }}')
        Set-Content -Path .\config\docker-images\docker-images.json -Value $dockerImageSpec
        git add .\config\docker-images\docker-images.json        
        Set-Content -Path .\config\docker-images\VERSION.md -Value '${{ env.BUILD_NUMBER }}'
        git add .\config\docker-images\VERSION.md
        echo "git commit"
        git commit -m"Bump image version to ${{ env.BUILD_NUMBER }}"        
        echo "git push"
        git -c http.extraHeader="Authorization: Basic $base64PAT" push --set-upstream origin $newbrance
        echo "creating pull request..."
        $uri = "${{ secrets.AZURE_DEVOPS_PROJECT_URL }}/_apis/git/repositories/application?api-version=6.0"
        $headers = @{
            'Authorization' = "Basic $base64PAT"
        }
        $repo = Invoke-RestMethod -Uri $uri -Method Get -Headers $headers
        $createPullRequestBody = @{
            sourceRefName = "refs/heads/$newbrance"
            targetRefName = "refs/heads/main"
            title = "Bump images version to ${{ env.BUILD_NUMBER }}"
            description = "Bump images version to ${{ env.BUILD_NUMBER }}"
        } | ConvertTo-Json
        $createPullRequestUri = "$($repo.Url)/pullrequests?api-version=6.0"
        Invoke-RestMethod -Uri $createPullRequestUri -Method Post -Headers $headers -Body $createPullRequestBody -ContentType 'application/json'

