name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      runson:
        type: choice
        description: 'Select Runner'
        required: true
        default: 'windows-2019'
        options:
        - windows-2019
        - windows-latest
        - self-hosted

jobs:

  build:

    runs-on: ${{ github.event.inputs.runson }}

    strategy:
      matrix:
        topology: [xm1]

    environment: DEV
    
    steps:
    - uses: actions/checkout@v2

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_USERNAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build docker image
      env:
        REGISTRY: ${{ secrets.ACR_USERNAME }}.azurecr.io/
        COMPOSE_PROJECT_NAME: helix-${{ matrix.topology }}
        SOLUTION_BUILD_IMAGE: mcr.microsoft.com/dotnet/framework/sdk:4.8
        SOLUTION_BASE_IMAGE: mcr.microsoft.com/windows/nanoserver:1809
        BUILD_CONFIGURATION: Release
        DEV_TOOL: None        
        LOCAL_BUILD_PATH: ..\docker\build
        SITECORE_DOCKER_REGISTRY: scr.sitecore.com/sxp/
        SITECORE_TOOLS_REGISTRY: scr.sitecore.com/tools/
        SITECORE_MODULE_REGISTRY: scr.sitecore.com/sxp/modules/
        SITECORE_VERSION: 10.1-ltsc2019        
        SPE_VERSION: 6.2-1809
        TOOLS_VERSION: 10.1.0-1809
        TRAEFIK_IMAGE: traefik:v2.2.0-windowsservercore-1809
        COVEO_IMAGE: custom-coveo5010391-assets:10.1.0-1809
        COVEO_MODULE_REGISTRY: ${{ secrets.ACR_USERNAME }}.azurecr.io/community/modules/
        TDS_Owner: ${{ secrets.TDS_Owner }}
        TDS_Key: ${{ secrets.TDS_Key }}
        CD_HOST: cd.helix.localhost
        CM_HOST: cm.helix.localhost
        ID_HOST: id.helix.localhost
        SITE_HOST: www.helix.localhost
      working-directory: ${{ matrix.topology }}
      run: | 
        docker-compose build
        docker-compose push
