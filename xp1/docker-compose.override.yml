version: "3.9"

services:

  solution:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    build:
      context: ..
      args:
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION:-Release}
        DEV_TOOL: ${DEV_TOOL:-None}
        TDS_Owner: ${TDS_OWNER}
        TDS_Key: ${TDS_KEY}
    scale: 0

  traefik:
    volumes:
      - ${LOCAL_TRAEFIK_PATH}:C:/etc/traefik
  
  redis:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-redis:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/redis
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-redis:${SITECORE_VERSION}

  mssql:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp1-mssql:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-mssql:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        #SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}
        #HORIZON_IMAGE: ${SITECORE_MODULE_REGISTRY}horizon-integration-xp1-assets:${HORIZON_ASSET_VERSION}
    mem_limit: 2GB
    volumes:
      - ${LOCAL_DATA_PATH}\mssql:c:\data

  mssql-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-mssql-init:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/mssql-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-mssql-init:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
    scale: 0 # not needed in local dev
      
  # Mount our Solr data folder
  solr:
    volumes:
      - ${LOCAL_DATA_PATH}\solr:c:\data

  # Some modules (like SXA) also require additions to the Solr image.
  solr-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solr-init:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/solr-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-solr-init:${SITECORE_VERSION}
        #SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}

  id:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-id:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-id:${SITECORE_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
    depends_on:
      - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      Sitecore_Sitecore__ExternalIdentityProviders__IdentityProviders__AzureAd__Enabled: ${SITECORE_ID_AZUREAD_ENABLED}
      Sitecore_Sitecore__ExternalIdentityProviders__IdentityProviders__AzureAd__ClientId: ${SITECORE_ID_AZUREAD_CLIENTID}
      Sitecore_Sitecore__ExternalIdentityProviders__IdentityProviders__AzureAd__TenantId: ${SITECORE_ID_AZUREAD_TENANTID}
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
  cd:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-cd:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/cd
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-cd:${SITECORE_VERSION}
        #SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    depends_on:
      - solution
    volumes:
      - ${LOCAL_DEPLOY_PATH}\website:C:\deploy
      - ${LOCAL_DATA_PATH}\cd:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_APPSETTINGS_coveo__define: ${COVEO_ENABLE:-disabled}     
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff   
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      SITECORE_LOG_LEVEL: ${SITECORE_LOG_LEVEL:-INFO}
      BASIC_COMPANY_URL: ${SITE_HOST}
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
    labels:
      - "traefik.http.routers.cd-secure.rule=Host(`${SITE_HOST}`) || Host(`${CD_HOST}`)"

  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-cm:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-cm:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        #HORIZON_IMAGE: ${SITECORE_MODULE_REGISTRY}horizon-integration-xp1-assets:${HORIZON_ASSET_VERSION}
        #SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    depends_on:
      - solution
    volumes:
      - ${LOCAL_DEPLOY_PATH}\website:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_APPSETTINGS_coveo__define: ${COVEO_ENABLE:-disabled}     
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff   
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      SITECORE_LOG_LEVEL: ${SITECORE_LOG_LEVEL:-INFO}
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
      
  prc:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-prc:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/prc
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-prc:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    depends_on:
      - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml

  xdbcollection:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbcollection:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbcollection
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbcollection:${SITECORE_VERSION}
    #     SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    # depends_on:
    #   - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  xdbsearch:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbsearch:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbsearch
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbsearch:${SITECORE_VERSION}
    #     SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    # depends_on:
    #   - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  xdbautomation:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbautomation:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbautomation
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbautomation:${SITECORE_VERSION}
    #     SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    # depends_on:
    #   - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  xdbautomationrpt:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbautomationrpt:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbautomationrpt
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbautomationrpt:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  cortexprocessing:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-cortexprocessing:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/cortexprocessing
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-cortexprocessing:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  cortexreporting:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-cortexreporting:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/cortexreporting
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-cortexreporting:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  xdbrefdata:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbrefdata:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbrefdata
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbrefdata:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  xdbsearchworker:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbsearchworker:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbsearchworker
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbsearchworker:${SITECORE_VERSION}
    #     SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    # depends_on:
    #   - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  xdbautomationworker:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xdbautomationworker:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/xdbautomationworker
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-xdbautomationworker:${SITECORE_VERSION}
    #     SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    # depends_on:
    #   - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license

  cortexprocessingworker:
    # image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-cortexprocessingworker:${VERSION:-latest}
    # build:
    #   context: ${LOCAL_BUILD_PATH}/cortexprocessingworker
    #   args:
    #     BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp1-cortexprocessingworker:${SITECORE_VERSION}
    #     SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    # depends_on:
    #   - solution
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license
